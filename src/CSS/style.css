@keyframes moveInLeft {
  /* moveInLeft is a variable name -- so can be used anywhere */
  0% {
    opacity: 0;
    transform: translateX(-10rem);
    /* on the left  */ }
  80% {
    transform: translateX(1rem);
    /* before 100% on main position -- we want it to go 10px further right and then , come back */ }
  100% {
    opacity: 1;
    transform: translateX(0);
    /*  at 0 ... it will be at the main position */ } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
    /* on the right  */ }
  80% {
    transform: translateX(-1rem);
    /* before 100% on main position -- we want it to go -10px further left and then , come back */ }
  100% {
    opacity: 1;
    transform: translateX(0);
    /*  at 0 ... it will be at the main position */ } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(10rem);
    /* on the right  */ }
  80% {
    transform: translateY(-1rem);
    /* before 100% on main position -- we want it to go -10px further left and then , come back */ }
  100% {
    opacity: 1;
    transform: translateY(0);
    /*  at 0 ... it will be at the main position */ } }

@keyframes moveInTop {
  0% {
    opacity: 0;
    transform: translateY(-10rem);
    /* on the right  */ }
  80% {
    transform: translateY(1rem);
    /* before 100% on main position -- we want it to go -10px further left and then , come back */ }
  100% {
    opacity: 1;
    transform: translateY(0);
    /*  at 0 ... it will be at the main position */ } }

/*
$Breakpoint argument choices
Phone -- 0 - 600 px 
tab-port -- 600 - 900 px for tablet portrait 
tab-land -- 900 - 1200 px for tab landscape 
[1200 - 1800 ] -- is for desktop we are using and we have made the website with 
big-desktop -- 1800px + 
*/
* {
  margin: 0;
  box-sizing: border-box;
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  font-weight: 400;
  font-size: 62.5%;
  /* 10/16 * 100 means this -- so user cannot change to any pixel by himself */
  /* initially -- it was 10px */
  /* font-size is very important property here .. this is a base of rem -- means 1 rem = 10px */
  /* if we change pixels here in font-size .. then every value with rem will change */
  /* this font-size property is base of rem */
  line-height: 1.7;
  /* 1.7* bigger */
  color: #777; }
  @media only screen and (max-width: 75em) {
    * {
      font-size: 56.25%; } }
  @media only screen and (max-width: 56.25em) {
    * {
      font-size: 50%;
      padding: 0.4rem; } }
  @media only screen and (min-width: 112.5em) {
    * {
      font-size: 75%; } }

body {
  padding: 0.5rem;
  /* to have 30px padding on all sides of the whole body -- optional */
  margin: 2.5rem; }

::selection {
  background-color: #55c57a;
  color: #fff; }

/*
$Breakpoint argument choices
Phone -- 0 - 600 px 
tab-port -- 600 - 900 px for tablet portrait 
tab-land -- 900 - 1200 px for tab landscape 
[1200 - 1800 ] -- is for desktop we are using and we have made the website with 
big-desktop -- 1800px + 
*/
.btn {
  text-transform: uppercase;
  text-decoration: none;
  display: inline-block;
  padding: 1.5rem 4rem;
  border-radius: 10rem;
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
  font-size: 1.6rem;
  border: none;
  cursor: pointer; }
  .btn:focus {
    outline: none; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.2);
    outline: none !important; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s; }

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; }

.btn-white {
  background-color: #fff;
  color: #777;
  position: relative; }

.btn-white::after {
  background-color: #fff; }

.btn-green {
  background-color: #55c57a;
  color: #fff;
  position: relative; }

.btn-green::after {
  background-color: #55c57a; }

.mt3 {
  margin-top: 3rem; }

.row {
  max-width: 114rem;
  margin: 0 auto !important; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
    @media only screen and (max-width: 56.25em) {
      .row:not(:last-child) {
        margin-bottom: 6rem !important; } }
  @media only screen and (max-width: 56.25em) {
    .row {
      max-width: 50rem;
      padding: 0 3rem; } }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left !important; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem !important; }
      @media only screen and (max-width: 56.25em) {
        .row [class^="col-"]:not(:last-child) {
          margin-right: 0;
          margin-bottom: 6rem; } }
    @media only screen and (max-width: 56.25em) {
      .row [class^="col-"] {
        width: 100% !important; } }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }
